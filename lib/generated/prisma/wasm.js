
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CategoriaScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  nombre: 'nombre',
  encargado: 'encargado'
};

exports.Prisma.EstadosScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  nombre: 'nombre'
};

exports.Prisma.PosicionScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  nombre: 'nombre'
};

exports.Prisma.PrioridadScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  nombre: 'nombre'
};

exports.Prisma.RolScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  nombre: 'nombre'
};

exports.Prisma.SectorScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  nombre: 'nombre'
};

exports.Prisma.Sub_categoriasScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  nombre: 'nombre',
  id_categorias: 'id_categorias'
};

exports.Prisma.TicketScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  id_user: 'id_user',
  id_categoria: 'id_categoria',
  id_subcategoria: 'id_subcategoria',
  telefono: 'telefono',
  descripcion: 'descripcion',
  id_prioridad: 'id_prioridad',
  id_sector: 'id_sector',
  valor: 'valor',
  link_art: 'link_art',
  id_estado: 'id_estado',
  fecha: 'fecha'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  nombre: 'nombre',
  correo: 'correo',
  id_sector: 'id_sector',
  id_posicion: 'id_posicion',
  id_autorizador: 'id_autorizador',
  rol: 'rol',
  telefono: 'telefono',
  iB1: 'iB1',
  iB2: 'iB2',
  iB3: 'iB3',
  iB4: 'iB4',
  iB5: 'iB5'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  categoria: 'categoria',
  estados: 'estados',
  posicion: 'posicion',
  prioridad: 'prioridad',
  rol: 'rol',
  sector: 'sector',
  sub_categorias: 'sub_categorias',
  ticket: 'ticket',
  users: 'users'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/ariel/proyectos/AssistCargo/tickets-app/lib/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/ariel/proyectos/AssistCargo/tickets-app/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nmodel categoria {\n  id             Int              @id @default(autoincrement())\n  created_at     DateTime         @default(now()) @db.Timestamptz(6)\n  nombre         String?\n  encargado      Int\n  sub_categorias sub_categorias[]\n  tickets        ticket[]\n\n  @@map(\"categoria\")\n}\n\nmodel estados {\n  id         Int      @id @default(autoincrement())\n  created_at DateTime @default(now()) @db.Timestamptz(6)\n  nombre     String?\n  tickets    ticket[]\n\n  @@map(\"estados\")\n}\n\nmodel posicion {\n  id         Int      @id @default(autoincrement())\n  created_at DateTime @default(now()) @db.Timestamptz(6)\n  nombre     String?\n  users      users[]\n\n  @@map(\"posicion\")\n}\n\nmodel prioridad {\n  id         Int      @id @default(autoincrement())\n  created_at DateTime @default(now()) @db.Timestamptz(6)\n  nombre     String?\n  tickets    ticket[]\n\n  @@map(\"prioridad\")\n}\n\nmodel rol {\n  id         Int      @id @default(autoincrement())\n  created_at DateTime @default(now()) @db.Timestamptz(6)\n  nombre     String?\n\n  @@map(\"rol\")\n}\n\nmodel sector {\n  id         Int      @id @default(autoincrement())\n  created_at DateTime @default(now()) @db.Timestamptz(6)\n  nombre     String?\n  tickets    ticket[]\n  users      users[]\n\n  @@map(\"sector\")\n}\n\nmodel sub_categorias {\n  id            Int        @id @default(autoincrement())\n  created_at    DateTime   @default(now()) @db.Timestamptz(6)\n  nombre        String?\n  id_categorias Int?\n  categoria     categoria? @relation(fields: [id_categorias], references: [id])\n  tickets       ticket[]\n\n  @@map(\"sub_categorias\")\n}\n\nmodel ticket {\n  id              Int             @id @default(autoincrement())\n  created_at      DateTime        @default(now()) @db.Timestamptz(6)\n  id_user         String?\n  id_categoria    Int?\n  id_subcategoria Int?\n  telefono        String?\n  descripcion     String?\n  id_prioridad    Int?\n  id_sector       Int?\n  valor           String?\n  link_art        String?\n  id_estado       Int?\n  fecha           String?         @db.VarChar\n  categoria       categoria?      @relation(fields: [id_categoria], references: [id])\n  estado          estados?        @relation(fields: [id_estado], references: [id])\n  prioridad       prioridad?      @relation(fields: [id_prioridad], references: [id])\n  sector          sector?         @relation(fields: [id_sector], references: [id])\n  subcategoria    sub_categorias? @relation(fields: [id_subcategoria], references: [id])\n  user            users?          @relation(fields: [id_user], references: [id])\n\n  @@map(\"ticket\")\n}\n\nmodel users {\n  id             String    @id @default(uuid())\n  created_at     DateTime  @default(now()) @db.Timestamptz(6)\n  nombre         String\n  correo         String?   @unique\n  id_sector      Int?\n  id_posicion    Int?\n  id_autorizador String?\n  rol            String?   @default(\"user\")\n  telefono       String?\n  iB1            String?\n  iB2            String?\n  iB3            String?\n  iB4            String?\n  iB5            String?\n  tickets        ticket[]\n  autorizador    users?    @relation(\"UserAutoriza\", fields: [id_autorizador], references: [id])\n  autorizados    users[]   @relation(\"UserAutoriza\")\n  posicion       posicion? @relation(fields: [id_posicion], references: [id])\n  sector         sector?   @relation(fields: [id_sector], references: [id])\n\n  @@map(\"users\")\n}\n",
  "inlineSchemaHash": "4959617f711a96c6394a1f1ef7b44e76719e39ffaf208e76757383b1365954e2",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"categoria\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"encargado\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sub_categorias\",\"kind\":\"object\",\"type\":\"sub_categorias\",\"relationName\":\"categoriaTosub_categorias\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"ticket\",\"relationName\":\"categoriaToticket\"}],\"dbName\":\"categoria\"},\"estados\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"ticket\",\"relationName\":\"estadosToticket\"}],\"dbName\":\"estados\"},\"posicion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"posicionTousers\"}],\"dbName\":\"posicion\"},\"prioridad\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"ticket\",\"relationName\":\"prioridadToticket\"}],\"dbName\":\"prioridad\"},\"rol\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"rol\"},\"sector\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"ticket\",\"relationName\":\"sectorToticket\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"sectorTousers\"}],\"dbName\":\"sector\"},\"sub_categorias\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_categorias\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categoria\",\"kind\":\"object\",\"type\":\"categoria\",\"relationName\":\"categoriaTosub_categorias\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"ticket\",\"relationName\":\"sub_categoriasToticket\"}],\"dbName\":\"sub_categorias\"},\"ticket\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"id_user\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_categoria\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"id_subcategoria\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_prioridad\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"id_sector\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"valor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link_art\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_estado\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fecha\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoria\",\"kind\":\"object\",\"type\":\"categoria\",\"relationName\":\"categoriaToticket\"},{\"name\":\"estado\",\"kind\":\"object\",\"type\":\"estados\",\"relationName\":\"estadosToticket\"},{\"name\":\"prioridad\",\"kind\":\"object\",\"type\":\"prioridad\",\"relationName\":\"prioridadToticket\"},{\"name\":\"sector\",\"kind\":\"object\",\"type\":\"sector\",\"relationName\":\"sectorToticket\"},{\"name\":\"subcategoria\",\"kind\":\"object\",\"type\":\"sub_categorias\",\"relationName\":\"sub_categoriasToticket\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"ticketTousers\"}],\"dbName\":\"ticket\"},\"users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"correo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_sector\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"id_posicion\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"id_autorizador\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iB1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iB2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iB3\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iB4\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iB5\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"ticket\",\"relationName\":\"ticketTousers\"},{\"name\":\"autorizador\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"UserAutoriza\"},{\"name\":\"autorizados\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"UserAutoriza\"},{\"name\":\"posicion\",\"kind\":\"object\",\"type\":\"posicion\",\"relationName\":\"posicionTousers\"},{\"name\":\"sector\",\"kind\":\"object\",\"type\":\"sector\",\"relationName\":\"sectorTousers\"}],\"dbName\":\"users\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

