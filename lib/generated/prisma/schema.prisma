generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model categoria {
  id             Int              @id @default(autoincrement())
  created_at     DateTime         @default(now()) @db.Timestamptz(6)
  nombre         String?
  encargado      Int
  sub_categorias sub_categorias[]
  tickets        ticket[]

  @@map("categoria")
}

model estados {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  nombre     String?
  tickets    ticket[]

  @@map("estados")
}

model posicion {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  nombre     String?
  users      users[]

  @@map("posicion")
}

model prioridad {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  nombre     String?
  tickets    ticket[]

  @@map("prioridad")
}

model rol {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  nombre     String?

  @@map("rol")
}

model sector {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  nombre     String?
  tickets    ticket[]
  users      users[]

  @@map("sector")
}

model sub_categorias {
  id            Int        @id @default(autoincrement())
  created_at    DateTime   @default(now()) @db.Timestamptz(6)
  nombre        String?
  id_categorias Int?
  categoria     categoria? @relation(fields: [id_categorias], references: [id])
  tickets       ticket[]

  @@map("sub_categorias")
}

model ticket {
  id              Int             @id @default(autoincrement())
  created_at      DateTime        @default(now()) @db.Timestamptz(6)
  id_user         String?
  id_categoria    Int?
  id_subcategoria Int?
  telefono        String?
  descripcion     String?
  id_prioridad    Int?
  id_sector       Int?
  valor           String?
  link_art        String?
  id_estado       Int?
  fecha           String?         @db.VarChar
  categoria       categoria?      @relation(fields: [id_categoria], references: [id])
  estado          estados?        @relation(fields: [id_estado], references: [id])
  prioridad       prioridad?      @relation(fields: [id_prioridad], references: [id])
  sector          sector?         @relation(fields: [id_sector], references: [id])
  subcategoria    sub_categorias? @relation(fields: [id_subcategoria], references: [id])
  user            users?          @relation(fields: [id_user], references: [id])

  @@map("ticket")
}

model users {
  id             String    @id @default(uuid())
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  nombre         String
  correo         String?   @unique
  id_sector      Int?
  id_posicion    Int?
  id_autorizador String?
  rol            String?   @default("user")
  telefono       String?
  iB1            String?
  iB2            String?
  iB3            String?
  iB4            String?
  iB5            String?
  tickets        ticket[]
  autorizador    users?    @relation("UserAutoriza", fields: [id_autorizador], references: [id])
  autorizados    users[]   @relation("UserAutoriza")
  posicion       posicion? @relation(fields: [id_posicion], references: [id])
  sector         sector?   @relation(fields: [id_sector], references: [id])

  @@map("users")
}
